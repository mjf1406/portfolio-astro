---
// Import statements
import type { ImageGalleryProps } from '~/types';

const { images = {}, id, classes = {} } = Astro.props as ImageGalleryProps;

---

<div class="ml-5 flex flex-col items-center justify-center w-full text-center">
    <div class="font-bold leading-tighter tracking-tighter font-heading text-heading text-3xl md:text-4xl">A personal touch</div>
    <div class="mt-4 mb-6 max-w-3xl mx-auto sm:text-center text-xl text-muted dark:text-slate-400">Discover the meaningful impact I've had on my students. For privacy, their names have been redacted.</div>
</div>

<div id={id} class={`container ${classes.container ?? ''}`}>
    <ul class="images">
      {images.map((image) => (
        <li key={image.id}>
          <a href="javascript:void(0)" class="open-modal">
            <div class="imageImage mb-4">
              <img src={image.image} alt={image.title || ''} class="w-full h-auto" />
            </div>
            {image.title && <h3 class="text-lg font-medium leading-6">{image.title}</h3>}
          </a>
        </li>
      ))}
    </ul>

    <div id="modal" 
    class="modal pt-20 text-white flex items-center justify-center hidden backdrop-blur-sm fixed top-0 left-0 right-0 z-30 w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full bg-black bg-opacity-20">
      <div class="max-h-[calc(100%-5rem)] modal-content relative overflow-y-scroll flex flex-col bg-slate-800 rounded-lg shadow-lg w-full md:w-2/3 lg:w-1/3 max-h-2/3 items-center p-8">
        <button type="button" class="close absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-hide="modal-create-DidgYa">
            <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
            </svg>
            <span class="sr-only">Close modal</span>
        </button>
        <img src="" alt="" id="modal-image" class="w-fill h-auto" />
      </div>
    </div>
</div>

<script>
  import Letter1 from '../../assets/images/student-letters/letter-1.webp';
  import Letter2 from '../../assets/images/student-letters/letter-2.webp';
  import Letter3 from '../../assets/images/student-letters/letter-3.webp';
  import Letter4 from '../../assets/images/student-letters/letter-4.webp';

    const images = [
      {
        "id": "letter-1",
        "image": Letter1.src,
        "width": 2376,
        "height": 1574
      },
      {
        "id": "letter-2",
        "image": Letter2.src,
        "width": 2376,
        "height": 1574
      },
      {
        "id": "letter-3",
        "image": Letter3.src,
        "width": 2376,
        "height": 1574
      },
      {
        "id": "letter-4",
        "image": Letter4.src,
        "width": 2376,
        "height": 1574
      },
    ];
    
  document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('modal');
    const modalImage = document.getElementById('modal-image');
    const openModalButtons = document.querySelectorAll('.open-modal');
    const closeModalButton = document.querySelector('.modal .close');

    openModalButtons.forEach((button, index) => {
      button.addEventListener('click', () => {
        const image = images[index];
        modalImage.src = image.image;
        modalImage.alt = image.title || '';
        modal.classList.remove('hidden');
      });
    });

    closeModalButton.addEventListener('click', () => {
      modal.classList.add('hidden');
    });

    window.onclick = (event) => {
      if (event.target === modal) {
        modal.classList.add('hidden');
      }
    };
  });
</script>

<style>
    .container {
      width: 100%;
      max-width: 1024px;
      padding: 0 1em;
      margin: 0 auto;
    }
  
    .images {
      list-style: none;
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      grid-gap: 3em;
    }
  
    .imageTitle {
      font-size: 1.4em;
      margin: .4em 0 0;
    }
  
    .imageImage > img {
      display: block!important;
      width: 100%;
      height: auto;
    }
</style>